(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>s});var o=n(15),i=n.n(o),r=n(645),a=n.n(r)()(i());a.push([e.id,"html {\n    border: 0;\n    margin: 0;\n    background-color: rgb(61, 61, 61);\n    color: white;\n}\n\nbody {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: flex-start;\n    width: 100%;\n    height: 100vh;\n}\n\n#header-div {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    font-size: 70px;\n}\n\n#setup-area {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n    width: 100%;\n    height: 150px;\n}\n\n#ships-div {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-evenly;\n    width: 80%;\n}\n\n.ship-placements {\n    display: flex;\n}\n\n.placed[name='horizontal'] {\n    flex-direction: row;\n}\n\n.placed[name='vertical'] {\n    flex-direction: column;\n}\n\n.ship-div-elements {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-evenly;\n}\n\n.ship-parts {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    outline: solid;\n    outline-width: 2px;\n    outline-color:blanchedalmond;\n    background-color: black;\n    width: 3vw;\n    height: 3vw;\n    margin: 2px;\n    color: white;\n}\n\n#content {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-evenly;\n    width: 100%;\n}\n\n.rows {\n    display: flex;\n    flex-direction: row;\n}\n\n.squares {\n    display: flex;\n    align-items: flex-start;\n    justify-content: flex-start;\n    outline: solid;\n    outline-width: 1px;\n    outline-color: rgb(38, 201, 201);\n    width: 3vw;\n    height: 3vw;\n    margin: 2px;\n    background-color: rgb(142, 221, 195);\n    color: black;\n    font-size: 2vw;\n}\n\n.placed {\n    display: flex;\n    position: absolute;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,SAAS;IACT,iCAAiC;IACjC,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,2BAA2B;IAC3B,WAAW;IACX,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,mBAAmB;IACnB,uBAAuB;IACvB,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,6BAA6B;IAC7B,WAAW;IACX,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,mBAAmB;IACnB,6BAA6B;IAC7B,UAAU;AACd;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,6BAA6B;AACjC;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,mBAAmB;IACnB,uBAAuB;IACvB,cAAc;IACd,kBAAkB;IAClB,4BAA4B;IAC5B,uBAAuB;IACvB,UAAU;IACV,WAAW;IACX,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,mBAAmB;IACnB,6BAA6B;IAC7B,WAAW;AACf;;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,2BAA2B;IAC3B,cAAc;IACd,kBAAkB;IAClB,gCAAgC;IAChC,UAAU;IACV,WAAW;IACX,WAAW;IACX,oCAAoC;IACpC,YAAY;IACZ,cAAc;AAClB;;AAEA;IACI,aAAa;IACb,kBAAkB;AACtB",sourcesContent:["html {\n    border: 0;\n    margin: 0;\n    background-color: rgb(61, 61, 61);\n    color: white;\n}\n\nbody {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: flex-start;\n    width: 100%;\n    height: 100vh;\n}\n\n#header-div {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    font-size: 70px;\n}\n\n#setup-area {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n    width: 100%;\n    height: 150px;\n}\n\n#ships-div {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-evenly;\n    width: 80%;\n}\n\n.ship-placements {\n    display: flex;\n}\n\n.placed[name='horizontal'] {\n    flex-direction: row;\n}\n\n.placed[name='vertical'] {\n    flex-direction: column;\n}\n\n.ship-div-elements {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-evenly;\n}\n\n.ship-parts {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    outline: solid;\n    outline-width: 2px;\n    outline-color:blanchedalmond;\n    background-color: black;\n    width: 3vw;\n    height: 3vw;\n    margin: 2px;\n    color: white;\n}\n\n#content {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-evenly;\n    width: 100%;\n}\n\n.rows {\n    display: flex;\n    flex-direction: row;\n}\n\n.squares {\n    display: flex;\n    align-items: flex-start;\n    justify-content: flex-start;\n    outline: solid;\n    outline-width: 1px;\n    outline-color: rgb(38, 201, 201);\n    width: 3vw;\n    height: 3vw;\n    margin: 2px;\n    background-color: rgb(142, 221, 195);\n    color: black;\n    font-size: 2vw;\n}\n\n.placed {\n    display: flex;\n    position: absolute;\n}"],sourceRoot:""}]);const s=a},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=e(t);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,o){"string"==typeof e&&(e=[[null,e,""]]);var i={};if(o)for(var r=0;r<this.length;r++){var a=this[r][0];null!=a&&(i[a]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);o&&i[l[0]]||(n&&(l[2]?l[2]="".concat(n," and ").concat(l[2]):l[2]=n),t.push(l))}},t}},15:e=>{function t(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,o=new Array(t);n<t;n++)o[n]=e[n];return o}e.exports=function(e){var n,o,i=(o=4,function(e){if(Array.isArray(e))return e}(n=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var o,i,r=[],a=!0,s=!1;try{for(n=n.call(e);!(a=(o=n.next()).done)&&(r.push(o.value),!t||r.length!==t);a=!0);}catch(e){s=!0,i=e}finally{try{a||null==n.return||n.return()}finally{if(s)throw i}}return r}}(n,o)||function(e,n){if(e){if("string"==typeof e)return t(e,n);var o=Object.prototype.toString.call(e).slice(8,-1);return"Object"===o&&e.constructor&&(o=e.constructor.name),"Map"===o||"Set"===o?Array.from(e):"Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)?t(e,n):void 0}}(n,o)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),r=i[1],a=i[3];if(!a)return r;if("function"==typeof btoa){var s=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),l="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),d="/*# ".concat(l," */"),c=a.sources.map((function(e){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(e," */")}));return[r].concat(c).concat([d]).join("\n")}return[r].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var r={},a=[],s=0;s<e.length;s++){var l=e[s],d=o.base?l[0]+o.base:l[0],c=r[d]||0,p="".concat(d," ").concat(c);r[d]=c+1;var u=n(p),h={css:l[1],media:l[2],sourceMap:l[3]};-1!==u?(t[u].references++,t[u].updater(h)):t.push({identifier:p,updater:i(h,o),references:1}),a.push(p)}return a}function i(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;n.update(e=t)}else n.remove()}}e.exports=function(e,i){var r=o(e=e||[],i=i||{});return function(e){e=e||[];for(var a=0;a<r.length;a++){var s=n(r[a]);t[s].references--}for(var l=o(e,i),d=0;d<r.length;d++){var c=n(r[d]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}r=l}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o=n.css,i=n.media,r=n.sourceMap;i?e.setAttribute("media",i):e.removeAttribute("media"),r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleTagTransform(o,e)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var i=t[o];if(void 0!==i)return i.exports;var r=t[o]={id:o,exports:{}};return e[o](r,r.exports,n),r.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e=n(379),t=n.n(e),o=n(795),i=n.n(o),r=n(569),a=n.n(r),s=n(565),l=n.n(s),d=n(216),c=n.n(d),p=n(589),u=n.n(p),h=n(426),m={};m.styleTagTransform=u(),m.setAttributes=l(),m.insert=a().bind(null,"head"),m.domAPI=i(),m.insertStyleElement=c(),t()(h.Z,m),h.Z&&h.Z.locals&&h.Z.locals;const A=(e,t,n,o)=>{let i={shipFound:!1,shipFoundR:0,shipFoundC:0,move:0,lastHit:!1,goRight:!0,goLeft:!0,goUp:!0,goDown:!0,hitCoords:{r:0,c:0},placementCoords:{r:0,c:0,horizontal:!1}};function r(){return Math.floor(9*Math.random()+0)}function a(){let e=r(),t=r();for(;n.squares[e][t].hit;)e=r(),t=r();return n.squares[e][t].shipHere&&(i.shipFound=!0,i.shipFoundR=e,i.shipFoundC=t),i.hitCoords.r=e,i.hitCoords.c=t,i.hitCoords}return{title:e,myBoard:t,human:o,opponentBoard:n,cpuRandomAttack:a,cpuFoundAttack:function(){if(n.squares[i.shipFoundR][i.shipFoundC].ship.sunk)a();else{if(i.lastHit||(i.move=0),i.goRight&&i.shipFoundC+i.move+1>9?(i.goRight=!1,i.move=0):i.goLeft&&i.shipFoundC+i.move-1<0?(i.goLeft=!1,i.move=0):i.goUp&&i.shipFoundC+i.move-1<0?(i.goUp=!1,i.move=0):i.goDown&&i.shipFoundC+i.move+1>9&&(i.goDown=!1,i.move=0),i.goRight)return i.move++,n.squares[i.shipFoundR][i.shipFoundC+i.move].ship?(i.goUp=!1,i.goDown=!1,i.lastHit=!0):(i.goRight=!1,i.lastHit=!1),i.hitCoords.r=i.shipFoundR,i.hitCoords.c=i.shipFoundC+i.move,i.hitCoords;if(i.goLeft)return i.move--,n.squares[i.shipFoundR][i.shipFoundC+i.move].ship?(i.goUp=!1,i.goDown=!1,i.lastHit=!0):(i.goLeft=!1,i.lastHit=!1),i.hitCoords.r=i.shipFoundR,i.hitCoords.c=i.shipFoundC+i.move,i.hitCoords;if(i.goUp)return i.move--,n.squares[i.shipFoundR+i.move][i.shipFoundC].ship?(i.goLeft=!1,i.goRight=!1,i.lastHit=!0):(i.goUp=!1,i.lastHit=!1),i.hitCoords.r=i.shipFoundR+i.move,i.hitCoords.c=i.shipFoundC,i.hitCoords;if(i.goDown)return i.move++,n.squares[i.shipFoundR+i.move][i.shipFoundC].ship?(i.goLeft=!1,i.lastHit=!0):(i.goDown=!1,i.lastHit=!1),i.hitCoords.r=i.shipFoundR+i.move,i.hitCoords.c=i.shipFoundC,i.hitCoords}},cpuRandomPlace:function(){let e=r(),t=r(),n=r();return i.placementCoords.horizontal=n>=4,i.placementCoords.r=e,i.placementCoords.c=t,i.placementCoords},cpuInfo:i,resetCPUInfo:function(){i.shipFound=!1,i.shipFoundR=0,i.shipFoundC=0,i.move=0,i.lastHit=!1,i.goRight=!0,i.goLeft=!0,i.goUp=!0,i.goDown=!0}}},f=(e,t)=>{let n=0,o=[],i=!1;for(let e=0;e<t;e++)o[e]={hit:!1,boardR:null,boardC:null,pos:e};return{title:e,length:t,hit:function(e){o[e].hit=!0,n++},hits:n,position:o,isSunk:function(){for(let e=0;e<t;e++)if(0==o[e].hit)return!1;return i=!0,!0},sunk:i,deployed:!1,shipDomName:"",horizontal:void 0}},C=(e,t)=>{let n=[],o=[];for(let e=0;e<t;e++){n[e]=[];for(let o=0;o<t;o++)n[e][o]={row:e,col:o,hit:!1,ship:null,shipHere:!1,shipPart:null}}return{title:e,squares:n,placeShip:function(e,t,i,r){o.push(e),e.deployed=!0;for(let o=0;o<e.length;o++)r?(n[t][i+o].ship=e,n[t][i+o].shipHere=!0,n[t][i+o].shipPart=o,e.position[o].boardR=t,e.position[o].boardC=i+o):(n[t+o][i].ship=e,n[t+o][i].shipHere=!0,n[t+o][i].shipPart=o,e.position[o].boardR=t,e.position[o].boardC=i)},removeShip:function(e,t,o,i){for(let r=0;r<e.length;r++)i?(n[t][o+r].ship=null,n[t][o+r].shipHere=!1,n[t][o+r].shipPart=null,e.position[r].boardR=null,e.position[r].boardC=null):(n[t+r][o].ship=null,n[t+r][o].shipHere=!1,n[t+r][o].shipPart=null,e.position[r].boardR=null,e.position[r].boardC=null)},receiveAttack:function(e,t){return n[e][t].hit=!0,n[e][t].shipHere?(n[e][t].ship.hit(n[e][t].shipPart),"Hit"):"Miss"},allShipsSunk:function(){for(let e=0;e<o.length;e++)if(!o[e].isSunk())return!1;return!0},canPlace:function(e,t,o,i){for(let r=0;r<e.length;r++)if(i){if(o+e.length>10)return!1;if(n[t][o+r].shipHere)return!1}else{if(t+e.length>10)return!1;if(n[t+r][o].shipHere)return!1}return!0},ships:o}},v=document.body;let g,b,y,B,I,E,x;function w(e,t){if(E.myBoard.canPlace(g,e,t,g.horizontal))for(let n=0;n<g.length;n++){let o;o=g.horizontal?document.getElementById("board1-"+e+(t+n)):document.getElementById("board1-"+(e+n)+t),o.style.backgroundColor="cyan"}else E.myBoard.squares[e][t].ship||(document.getElementById("board1-"+e+t).style.backgroundColor="pink")}function k(e,t){if(E.myBoard.canPlace(g,e,t,g.horizontal))for(let n=0;n<g.length;n++){let o;o=g.horizontal?document.getElementById("board1-"+e+(t+n)):document.getElementById("board1-"+(e+n)+t),o.style.backgroundColor="rgb(142, 221, 195)"}else E.myBoard.squares[e][t].ship||(document.getElementById("board1-"+e+t).style.backgroundColor="rgb(142, 221, 195)")}function R(e,t){E.myBoard.placeShip(g,e,t,g.horizontal),console.log(E.myBoard);let n=document.getElementById("board1-"+e+t);for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(b),b.setAttribute("class","placed"),g.horizontal?b.setAttribute("name","horizontal"):b.setAttribute("name","vertical");for(let n=0;n<g.length;n++){let o;o=g.horizontal?document.getElementById("board1-"+e+(t+n)):document.getElementById("board1-"+(e+n)+t),o.style.backgroundColor="rgb(142, 221, 195)"}}function F(){console.log("pick up");let e=g.position[0].boardR,t=g.position[0].boardC;S(),console.log("removed"),b.addEventListener("dragend",(()=>{g.deployed||(R(e,t),console.log("placed back",E.myBoard))}))}function S(){let e=g.position[0].boardR,t=g.position[0].boardC,n=g.horizontal;E.myBoard.removeShip(g,e,t,n),console.log(E.myBoard)}function j(){let e=g.position[0].boardR,t=g.position[0].boardC,n=g.horizontal;S(),E.myBoard.canPlace(g,e,t,!n)?(g.horizontal=!g.horizontal,E.myBoard.placeShip(g,e,t,g.horizontal),R(e,t)):E.myBoard.placeShip(g,e,t,n)}function z(e,t){W(y?E:x,e,t)}let L,D,P,H,q,U=!1;function M(e){let t;for(t=x.cpuRandomPlace();!x.myBoard.canPlace(e,t.r,t.c,t.horizontal);)t=x.cpuRandomPlace();x.myBoard.placeShip(e,t.r,t.c,t.horizontal)}function W(e,t,n){if(e.opponentBoard.squares[t][n].hit||1!=U||("Hit"===e.opponentBoard.receiveAttack(t,n)?(console.log("Hit"),function(e,t){let n;if(console.log(y),y)n=document.getElementById("board2-"+e+t),console.log(n);else{let o=E.myBoard.squares[e][t].shipPart+1,i=E.myBoard.squares[e][t].ship.shipDomName;i+=o,console.log(i),n=document.getElementById(i),console.log(n)}n.textContent="x"}(t,n),e.opponentBoard.squares[t][n].ship.isSunk()&&(e.opponentBoard.squares[t][n].ship.sunk=!0,function(e){for(let t=0;t<e.length;t++){let n,o=e.position[t].boardR,i=e.position[t].boardC;if(y)n=document.getElementById("board2-"+o+i);else{let t=e.shipDomName+"Div";console.log(t),n=document.getElementById(t),console.log(n)}n.style.backgroundColor="red"}}(e.opponentBoard.squares[t][n].ship),e.opponentBoard.allShipsSunk()&&(U=!1,document.querySelector("#display").textContent=y?"Player 1 has won!":"Player 2 has won!"))):(console.log("Miss"),function(e,t){let n;n=y?document.getElementById("board2-"+e+t):document.getElementById("board1-"+e+t),n.textContent="o"}(t,n),y=!y)),!y){let e;x.cpuInfo.shipFound?e=x.cpuFoundAttack():(x.resetCPUInfo(),e=x.cpuRandomAttack()),e||(x.resetCPUInfo(),e=x.cpuRandomAttack()),setTimeout((()=>{W(x,e.r,e.c)}),800)}}L=f("Carrier",5),L.shipDomName="carrier",L.horizontal=!0,D=f("Battleship",4),D.shipDomName="battleship",D.horizontal=!0,P=f("Destroyer",3),P.shipDomName="destroyer",P.horizontal=!0,H=f("Submarine",3),H.shipDomName="submarine",H.horizontal=!0,q=f("Patrol Boat",2),q.shipDomName="patrol",q.horizontal=!0,B=C("board1",10),I=C("board2",10),E=A("Me",B,I,!0),x=A("cpu",I,B,!1),y=!0,function(){const e=document.createElement("div");e.id="header-div",e.textContent="Battleship",v.appendChild(e)}(),function(){const e=document.createElement("div");e.id="setup-area",v.appendChild(e)}(),function(){const e=document.createElement("div");e.id="content",v.appendChild(e);const t=document.createElement("div");t.id="display",v.appendChild(t),function(){const e=document.querySelector("#content");for(;e.firstChild;)e.removeChild(e.firstChild);const t=document.createElement("div");t.id="board1",e.appendChild(t);for(let e=0;e<10;e++){let n=document.createElement("div");n.setAttribute("class","rows");for(let t=0;t<10;t++){let o=document.createElement("div");o.setAttribute("class","squares"),o.id="board1-"+e+t,o.addEventListener("dragover",(n=>{n.preventDefault(),U||w(e,t)})),o.addEventListener("dragleave",(n=>{n.preventDefault(),U||k(e,t)})),o.addEventListener("drop",(n=>{n.preventDefault(),U||(E.myBoard.canPlace(g,e,t,g.horizontal)?R(e,t):k(e,t))})),o.addEventListener("click",(()=>{!y&&U&&z(e,t)})),n.appendChild(o)}t.appendChild(n)}const n=document.createElement("div");n.id="board2",e.appendChild(n);for(let e=0;e<10;e++){let t=document.createElement("div");t.setAttribute("class","rows");for(let n=0;n<10;n++){let o=document.createElement("div");o.setAttribute("class","squares"),o.id="board2-"+e+n,o.addEventListener("click",(()=>{y&&U&&z(e,n)})),t.appendChild(o)}n.appendChild(t)}}()}(),function(){const e=document.getElementById("setup-area"),t=document.createElement("div");t.id="game-start",t.textContent="start game",t.addEventListener("click",(()=>{L.deployed&&D.deployed&&P.deployed&&H.deployed&&q.deployed&&(U=!0,function(){let e=f("Carrier",5),t=f("Battleship",4),n=f("Destroyer",3),o=f("Submarine",3),i=f("Patrol Boat",2);M(e),M(t),M(n),M(o),M(i)}())})),e.appendChild(t);const n=document.createElement("div");n.id="ships-div";const o=document.createElement("div");o.setAttribute("class","ship-div-elements");const i=document.createElement("div");i.setAttribute("class","ship-placements"),i.id="carrierDiv",i.draggable=!0,i.addEventListener("click",(()=>{L.deployed&&!U&&(g=L,b=i,j())})),i.addEventListener("dragstart",(()=>{U||(g=L,b=i,g.deployed&&F())}));const r=document.createElement("div");r.setAttribute("class","ship-parts"),r.id="carrier1";const a=document.createElement("div");a.setAttribute("class","ship-parts"),a.id="carrier2";const s=document.createElement("div");s.setAttribute("class","ship-parts"),s.id="carrier3";const l=document.createElement("div");l.setAttribute("class","ship-parts"),l.id="carrier4";const d=document.createElement("div");d.setAttribute("class","ship-parts"),d.id="carrier5",i.appendChild(r),i.appendChild(a),i.appendChild(s),i.appendChild(l),i.appendChild(d),o.appendChild(i);const c=document.createElement("div");c.setAttribute("class","ship-div-elements");const p=document.createElement("div");p.setAttribute("class","ship-placements"),p.id="battleshipDiv",p.draggable=!0,p.addEventListener("click",(()=>{D.deployed&&!U&&(g=D,b=p,j())})),p.addEventListener("dragstart",(()=>{U||(g=D,b=p,g.deployed&&F())}));const u=document.createElement("div");u.setAttribute("class","ship-parts"),u.id="battleship1";const h=document.createElement("div");h.setAttribute("class","ship-parts"),h.id="battleship2";const m=document.createElement("div");m.setAttribute("class","ship-parts"),m.id="battleship3";const A=document.createElement("div");A.setAttribute("class","ship-parts"),A.id="battleship4",p.appendChild(u),p.appendChild(h),p.appendChild(m),p.appendChild(A),c.appendChild(p),b=p;const C=document.createElement("div");C.setAttribute("class","ship-div-elements");const v=document.createElement("div");v.setAttribute("class","ship-placements"),v.id="destroyerDiv",v.draggable=!0,v.addEventListener("click",(()=>{P.deployed&&!U&&(g=P,b=v,j())})),v.addEventListener("dragstart",(()=>{U||(g=P,b=v)}));const y=document.createElement("div");y.setAttribute("class","ship-parts"),y.id="destroyer1";const B=document.createElement("div");B.setAttribute("class","ship-parts"),B.id="destroyer2";const I=document.createElement("div");I.setAttribute("class","ship-parts"),I.id="destroyer3",v.appendChild(y),v.appendChild(B),v.appendChild(I),C.appendChild(v);const E=document.createElement("div");E.setAttribute("class","ship-div-elements");const x=document.createElement("div");x.setAttribute("class","ship-placements"),x.id="submarineDiv",x.draggable=!0,x.addEventListener("click",(()=>{H.deployed&&!U&&(g=H,b=x,j())})),x.addEventListener("dragstart",(()=>{U||(g=H,b=x)}));const w=document.createElement("div");w.setAttribute("class","ship-parts"),w.id="submarine1";const k=document.createElement("div");k.setAttribute("class","ship-parts"),k.id="submarine2";const R=document.createElement("div");R.setAttribute("class","ship-parts"),R.id="submarine3",x.appendChild(w),x.appendChild(k),x.appendChild(R),E.appendChild(x);const S=document.createElement("div");S.setAttribute("class","ship-div-elements");const z=document.createElement("div");z.setAttribute("class","ship-placements"),z.id="patrolDiv",z.draggable=!0,z.addEventListener("click",(()=>{q.deployed&&!U&&(g=q,b=z,j())})),z.addEventListener("dragstart",(()=>{U||(g=q,b=z)}));const W=document.createElement("div");W.setAttribute("class","ship-parts");const N=document.createElement("div");N.setAttribute("class","ship-parts"),z.appendChild(W),z.appendChild(N),S.appendChild(z),n.appendChild(o),n.appendChild(c),n.appendChild(C),n.appendChild(E),n.appendChild(S),e.appendChild(n)}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,