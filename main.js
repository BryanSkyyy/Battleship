(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>s});var o=n(15),i=n.n(o),r=n(645),a=n.n(r)()(i());a.push([e.id,":root {\n    --small-square: 2vw;\n    --big-square: 4vw;\n}\n\nhtml {\n    border: 0;\n    margin: 0;\n    background-color: rgb(61, 61, 61);\n    color: white;\n}\n\nbody {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: flex-start;\n    width: 100%;\n    height: 100vh;\n}\n\n#header-div {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    font-size: 70px;\n}\n\n#setup-area {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n    width: 20%;\n    height: 100%;\n}\n\n#ships-div {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-evenly;\n}\n\n.ship-placements {\n    display: flex;\n}\n\n.placed[name='horizontal'] {\n    flex-direction: row;\n}\n\n.placed[name='vertical'] {\n    flex-direction: column;\n}\n\n.ship-div-elements {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-evenly;\n}\n\n.ship-parts {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    outline: solid;\n    outline-width: 2px;\n    outline-color:blanchedalmond;\n    background-color: black;\n    width: var(--big-square);\n    height: var(--big-square);\n    margin: 2px;\n    color: white;\n}\n\n.ship-parts[name='small'] {\n    width: var(--small-square);\n    height: var(--small-square);\n    outline-width: 1px;\n    margin: 1px;\n}\n\n#content {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-evenly;\n    width: 100%;\n}\n\n.rows {\n    display: flex;\n    flex-direction: row;\n}\n\n.squares {\n    display: flex;\n    align-items: flex-start;\n    justify-content: flex-start;\n    outline: solid;\n    outline-width: 1px;\n    outline-color: rgb(38, 201, 201);\n    margin: 2px;\n    background-color: rgb(142, 221, 195);\n    color: black;\n}\n\n.big>.rows>.squares {\n    width: var(--big-square);\n    height: var(--big-square);\n    font-size: var(--big-square);\n    margin: 2px;\n}\n\n.small>.rows>.squares {\n    width: var(--small-square);\n    height: var(--small-square);\n    font-size: var(--small-square);\n    margin: 1px;\n}\n\n.placed {\n    display: flex;\n    position: absolute;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,mBAAmB;IACnB,iBAAiB;AACrB;;AAEA;IACI,SAAS;IACT,SAAS;IACT,iCAAiC;IACjC,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,2BAA2B;IAC3B,WAAW;IACX,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,mBAAmB;IACnB,uBAAuB;IACvB,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,6BAA6B;IAC7B,UAAU;IACV,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,6BAA6B;AACjC;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,6BAA6B;AACjC;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,mBAAmB;IACnB,uBAAuB;IACvB,cAAc;IACd,kBAAkB;IAClB,4BAA4B;IAC5B,uBAAuB;IACvB,wBAAwB;IACxB,yBAAyB;IACzB,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,0BAA0B;IAC1B,2BAA2B;IAC3B,kBAAkB;IAClB,WAAW;AACf;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,mBAAmB;IACnB,6BAA6B;IAC7B,WAAW;AACf;;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,2BAA2B;IAC3B,cAAc;IACd,kBAAkB;IAClB,gCAAgC;IAChC,WAAW;IACX,oCAAoC;IACpC,YAAY;AAChB;;AAEA;IACI,wBAAwB;IACxB,yBAAyB;IACzB,4BAA4B;IAC5B,WAAW;AACf;;AAEA;IACI,0BAA0B;IAC1B,2BAA2B;IAC3B,8BAA8B;IAC9B,WAAW;AACf;;AAEA;IACI,aAAa;IACb,kBAAkB;AACtB",sourcesContent:[":root {\n    --small-square: 2vw;\n    --big-square: 4vw;\n}\n\nhtml {\n    border: 0;\n    margin: 0;\n    background-color: rgb(61, 61, 61);\n    color: white;\n}\n\nbody {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: flex-start;\n    width: 100%;\n    height: 100vh;\n}\n\n#header-div {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    font-size: 70px;\n}\n\n#setup-area {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n    width: 20%;\n    height: 100%;\n}\n\n#ships-div {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-evenly;\n}\n\n.ship-placements {\n    display: flex;\n}\n\n.placed[name='horizontal'] {\n    flex-direction: row;\n}\n\n.placed[name='vertical'] {\n    flex-direction: column;\n}\n\n.ship-div-elements {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-evenly;\n}\n\n.ship-parts {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    outline: solid;\n    outline-width: 2px;\n    outline-color:blanchedalmond;\n    background-color: black;\n    width: var(--big-square);\n    height: var(--big-square);\n    margin: 2px;\n    color: white;\n}\n\n.ship-parts[name='small'] {\n    width: var(--small-square);\n    height: var(--small-square);\n    outline-width: 1px;\n    margin: 1px;\n}\n\n#content {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-evenly;\n    width: 100%;\n}\n\n.rows {\n    display: flex;\n    flex-direction: row;\n}\n\n.squares {\n    display: flex;\n    align-items: flex-start;\n    justify-content: flex-start;\n    outline: solid;\n    outline-width: 1px;\n    outline-color: rgb(38, 201, 201);\n    margin: 2px;\n    background-color: rgb(142, 221, 195);\n    color: black;\n}\n\n.big>.rows>.squares {\n    width: var(--big-square);\n    height: var(--big-square);\n    font-size: var(--big-square);\n    margin: 2px;\n}\n\n.small>.rows>.squares {\n    width: var(--small-square);\n    height: var(--small-square);\n    font-size: var(--small-square);\n    margin: 1px;\n}\n\n.placed {\n    display: flex;\n    position: absolute;\n}"],sourceRoot:""}]);const s=a},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=e(t);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,o){"string"==typeof e&&(e=[[null,e,""]]);var i={};if(o)for(var r=0;r<this.length;r++){var a=this[r][0];null!=a&&(i[a]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);o&&i[l[0]]||(n&&(l[2]?l[2]="".concat(n," and ").concat(l[2]):l[2]=n),t.push(l))}},t}},15:e=>{function t(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,o=new Array(t);n<t;n++)o[n]=e[n];return o}e.exports=function(e){var n,o,i=(o=4,function(e){if(Array.isArray(e))return e}(n=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var o,i,r=[],a=!0,s=!1;try{for(n=n.call(e);!(a=(o=n.next()).done)&&(r.push(o.value),!t||r.length!==t);a=!0);}catch(e){s=!0,i=e}finally{try{a||null==n.return||n.return()}finally{if(s)throw i}}return r}}(n,o)||function(e,n){if(e){if("string"==typeof e)return t(e,n);var o=Object.prototype.toString.call(e).slice(8,-1);return"Object"===o&&e.constructor&&(o=e.constructor.name),"Map"===o||"Set"===o?Array.from(e):"Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)?t(e,n):void 0}}(n,o)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),r=i[1],a=i[3];if(!a)return r;if("function"==typeof btoa){var s=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),l="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),d="/*# ".concat(l," */"),c=a.sources.map((function(e){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(e," */")}));return[r].concat(c).concat([d]).join("\n")}return[r].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var r={},a=[],s=0;s<e.length;s++){var l=e[s],d=o.base?l[0]+o.base:l[0],c=r[d]||0,u="".concat(d," ").concat(c);r[d]=c+1;var p=n(u),A={css:l[1],media:l[2],sourceMap:l[3]};-1!==p?(t[p].references++,t[p].updater(A)):t.push({identifier:u,updater:i(A,o),references:1}),a.push(u)}return a}function i(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;n.update(e=t)}else n.remove()}}e.exports=function(e,i){var r=o(e=e||[],i=i||{});return function(e){e=e||[];for(var a=0;a<r.length;a++){var s=n(r[a]);t[s].references--}for(var l=o(e,i),d=0;d<r.length;d++){var c=n(r[d]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}r=l}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o=n.css,i=n.media,r=n.sourceMap;i?e.setAttribute("media",i):e.removeAttribute("media"),r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleTagTransform(o,e)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var i=t[o];if(void 0!==i)return i.exports;var r=t[o]={id:o,exports:{}};return e[o](r,r.exports,n),r.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e=n(379),t=n.n(e),o=n(795),i=n.n(o),r=n(569),a=n.n(r),s=n(565),l=n.n(s),d=n(216),c=n.n(d),u=n(589),p=n.n(u),A=n(426),h={};h.styleTagTransform=p(),h.setAttributes=l(),h.insert=a().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=c(),t()(A.Z,h),A.Z&&A.Z.locals&&A.Z.locals;const m=(e,t,n,o)=>{let i={shipFound:!1,shipFoundR:0,shipFoundC:0,move:0,lastHit:!1,goRight:!0,goLeft:!0,goUp:!0,goDown:!0,hitCoords:{r:0,c:0},placementCoords:{r:0,c:0,horizontal:!1}};function r(){return Math.floor(9*Math.random()+0)}function a(){let e=r(),t=r();for(;n.squares[e][t].hit;)e=r(),t=r();return n.squares[e][t].shipHere&&(i.shipFound=!0,i.shipFoundR=e,i.shipFoundC=t),i.hitCoords.r=e,i.hitCoords.c=t,i.hitCoords}return{title:e,myBoard:t,human:o,opponentBoard:n,cpuRandomAttack:a,cpuFoundAttack:function e(){if(n.squares[i.shipFoundR][i.shipFoundC].ship.sunk)a();else{if(i.lastHit||(i.move=0),i.goRight&&i.shipFoundC+i.move+1>9?(i.goRight=!1,i.move=0):i.goLeft&&i.shipFoundC+i.move-1<0?(i.goLeft=!1,i.move=0):i.goUp&&i.shipFoundC+i.move-1<0?(i.goUp=!1,i.move=0):i.goDown&&i.shipFoundC+i.move+1>9&&(i.goDown=!1,i.move=0),i.goRight)return i.move++,n.squares[i.shipFoundR][i.shipFoundC+i.move].ship?(i.goUp=!1,i.goDown=!1,i.lastHit=!0):(i.goRight=!1,i.lastHit=!1),i.hitCoords.r=i.shipFoundR,i.hitCoords.c=i.shipFoundC+i.move,n.squares[i.shipFoundR][i.shipFoundC+i.move].hit?(i.goRight=!1,i.lastHit=!1,i.move=0,e()):i.hitCoords;if(i.goLeft)return i.move--,n.squares[i.shipFoundR][i.shipFoundC+i.move].ship?(i.goUp=!1,i.goDown=!1,i.lastHit=!0):(i.goLeft=!1,i.lastHit=!1),i.hitCoords.r=i.shipFoundR,i.hitCoords.c=i.shipFoundC+i.move,n.squares[i.shipFoundR][i.shipFoundC+i.move].hit?(i.goLeft=!1,i.lastHit=!1,i.move=0,e()):i.hitCoords;if(i.goUp)return i.move--,n.squares[i.shipFoundR+i.move][i.shipFoundC].ship?(i.goLeft=!1,i.goRight=!1,i.lastHit=!0):(i.goUp=!1,i.lastHit=!1),i.hitCoords.r=i.shipFoundR+i.move,i.hitCoords.c=i.shipFoundC,n.squares[i.shipFoundR+i.move][i.shipFoundC].hit?(i.goUp=!1,i.lastHit=!1,i.move=0,e()):i.hitCoords;if(i.goDown)return i.move++,n.squares[i.shipFoundR+i.move][i.shipFoundC].ship?(i.goLeft=!1,i.lastHit=!0):(i.goDown=!1,i.lastHit=!1),i.hitCoords.r=i.shipFoundR+i.move,i.hitCoords.c=i.shipFoundC,n.squares[i.shipFoundR+i.move][i.shipFoundC].hit?(i.goDown=!1,i.lastHit=!1,i.move=0,e()):i.hitCoords}},cpuRandomPlace:function(){let e=r(),t=r(),n=r();return i.placementCoords.horizontal=n>=4,i.placementCoords.r=e,i.placementCoords.c=t,i.placementCoords},cpuInfo:i,resetCPUInfo:function(){i.shipFound=!1,i.shipFoundR=0,i.shipFoundC=0,i.move=0,i.lastHit=!1,i.goRight=!0,i.goLeft=!0,i.goUp=!0,i.goDown=!0}}},f=(e,t)=>{let n=0,o=[],i=!1;for(let e=0;e<t;e++)o[e]={hit:!1,boardR:null,boardC:null,pos:e};return{title:e,length:t,hit:function(e){o[e].hit=!0,n++},hits:n,position:o,isSunk:function(){for(let e=0;e<t;e++)if(0==o[e].hit)return!1;return i=!0,!0},sunk:i,deployed:!1,shipDomName:"",horizontal:void 0}},C=(e,t)=>{let n=[],o=[];for(let e=0;e<t;e++){n[e]=[];for(let o=0;o<t;o++)n[e][o]={row:e,col:o,hit:!1,ship:null,shipHere:!1,shipPart:null}}return{title:e,squares:n,placeShip:function(e,t,i,r){o.push(e),e.deployed=!0;for(let o=0;o<e.length;o++)r?(n[t][i+o].ship=e,n[t][i+o].shipHere=!0,n[t][i+o].shipPart=o,e.position[o].boardR=t,e.position[o].boardC=i+o):(n[t+o][i].ship=e,n[t+o][i].shipHere=!0,n[t+o][i].shipPart=o,e.position[o].boardR=t+o,e.position[o].boardC=i)},removeShip:function(e,t,o,i){for(let r=0;r<e.length;r++)i?(n[t][o+r].ship=null,n[t][o+r].shipHere=!1,n[t][o+r].shipPart=null,e.position[r].boardR=null,e.position[r].boardC=null):(n[t+r][o].ship=null,n[t+r][o].shipHere=!1,n[t+r][o].shipPart=null,e.position[r].boardR=null,e.position[r].boardC=null)},receiveAttack:function(e,t){return n[e][t].hit=!0,n[e][t].shipHere?(n[e][t].ship.hit(n[e][t].shipPart),"Hit"):"Miss"},allShipsSunk:function(){for(let e=0;e<o.length;e++)if(!o[e].isSunk())return!1;return!0},canPlace:function(e,t,o,i){for(let r=0;r<e.length;r++)if(i){if(o+e.length>10)return!1;if(n[t][o+r].shipHere)return!1}else{if(t+e.length>10)return!1;if(n[t+r][o].shipHere)return!1}return!0},ships:o}},v=document.body;let g,b,B;function y(e,t){if(z.myBoard.canPlace(g,e,t,g.horizontal))for(let n=0;n<g.length;n++){let o;o=g.horizontal?document.getElementById("board1-"+e+(t+n)):document.getElementById("board1-"+(e+n)+t),o.style.backgroundColor="cyan"}else z.myBoard.squares[e][t].ship||(document.getElementById("board1-"+e+t).style.backgroundColor="pink")}function I(e,t){if(z.myBoard.canPlace(g,e,t,g.horizontal))for(let n=0;n<g.length;n++){let o;o=g.horizontal?document.getElementById("board1-"+e+(t+n)):document.getElementById("board1-"+(e+n)+t),o.style.backgroundColor="rgb(142, 221, 195)"}else z.myBoard.squares[e][t].ship||(document.getElementById("board1-"+e+t).style.backgroundColor="rgb(142, 221, 195)")}function E(e,t){z.myBoard.placeShip(g,e,t,g.horizontal);let n=document.getElementById("board1-"+e+t);for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(b),b.setAttribute("class","placed"),g.horizontal?b.setAttribute("name","horizontal"):b.setAttribute("name","vertical");for(let n=0;n<g.length;n++){let o;o=g.horizontal?document.getElementById("board1-"+e+(t+n)):document.getElementById("board1-"+(e+n)+t),o.style.backgroundColor="rgb(142, 221, 195)"}}function x(){console.log("pick up");let e=g.position[0].boardR,t=g.position[0].boardC;w(),console.log("removed"),b.addEventListener("dragend",(()=>{g.deployed||(E(e,t),console.log("placed back",z.myBoard))}))}function w(){let e=g.position[0].boardR,t=g.position[0].boardC,n=g.horizontal;z.myBoard.removeShip(g,e,t,n)}function q(){let e=g.position[0].boardR,t=g.position[0].boardC,n=g.horizontal;w(),z.myBoard.canPlace(g,e,t,!n)?(g.horizontal=!g.horizontal,z.myBoard.placeShip(g,e,t,g.horizontal),E(e,t)):z.myBoard.placeShip(g,e,t,n)}function k(){const e=document.getElementById("content");let t=e.firstChild;e.removeChild(e.firstChild),e.firstChild.setAttribute("class","big"),e.appendChild(t),t.setAttribute("class","small"),document.querySelectorAll(".ship-parts").forEach((e=>{B?e.setAttribute("name","small"):e.setAttribute("name","big")})),B?M=!0:Y()}function R(e,t){N(B?z:j,e,t)}let F,S,z,j,L,D,H,P,U,M=!1,T=!1;function W(e){let t;for(t=j.cpuRandomPlace();!j.myBoard.canPlace(e,t.r,t.c,t.horizontal);)t=j.cpuRandomPlace();j.myBoard.placeShip(e,t.r,t.c,t.horizontal)}function N(e,t,n){e.opponentBoard.squares[t][n].hit||1!=T||("Hit"===e.opponentBoard.receiveAttack(t,n)?(console.log("Hit"),function(e,t){let n;if(B)n=document.getElementById("board2-"+e+t);else{let o=z.myBoard.squares[e][t].shipPart+1,i=z.myBoard.squares[e][t].ship.shipDomName;i+=o,n=document.getElementById(i)}n.textContent="x"}(t,n),e.opponentBoard.squares[t][n].ship.isSunk()&&(e.opponentBoard.squares[t][n].ship.sunk=!0,function(e){for(let t=0;t<e.length;t++){console.log(e);let n,o=e.position[t].boardR,i=e.position[t].boardC;if(B)n=document.getElementById("board2-"+o+i),console.log("board2-"+o+i),console.log(n);else{let o=e.shipDomName+(t+1);console.log(o),n=document.getElementById(o),console.log(n)}n.style.backgroundColor="red"}}(e.opponentBoard.squares[t][n].ship),e.opponentBoard.allShipsSunk()&&(T=!1,document.querySelector("#display").textContent=B?"Player 1 has won!":"Player 2 has won!")),!B&&T&&Y()):(console.log("Miss"),function(e,t){let n;n=B?document.getElementById("board2-"+e+t):document.getElementById("board1-"+e+t),n.textContent="o"}(t,n),B=!B,B||(M=!1),setTimeout((()=>{k()}),1e3)))}function Y(){let e;j.cpuInfo.shipFound?e=j.cpuFoundAttack():(j.resetCPUInfo(),e=j.cpuRandomAttack()),e||(j.resetCPUInfo(),e=j.cpuRandomAttack()),setTimeout((()=>{N(j,e.r,e.c)}),1500)}L=f("Carrier",5),L.shipDomName="carrier",L.horizontal=!0,D=f("Battleship",4),D.shipDomName="battleship",D.horizontal=!0,H=f("Destroyer",3),H.shipDomName="destroyer",H.horizontal=!0,P=f("Submarine",3),P.shipDomName="submarine",P.horizontal=!0,U=f("Patrol Boat",2),U.shipDomName="patrol",U.horizontal=!0,F=C("board1",10),S=C("board2",10),z=m("Me",F,S,!0),j=m("cpu",S,F,!1),B=!0,function(){const e=document.createElement("div");e.id="topDiv";const t=document.createElement("div");t.id="header-div",t.textContent="Battleship";const n=document.createElement("div");n.id="game-start",n.textContent="start game",n.addEventListener("click",(()=>{L.deployed&&D.deployed&&H.deployed&&P.deployed&&U.deployed&&(function(){const e=document.querySelector("#content"),t=document.getElementById("setup-area");e.removeChild(t)}(),function(){const e=document.querySelector("#content"),t=document.createElement("div");t.id="board2",t.setAttribute("class","small"),e.appendChild(t);for(let e=0;e<10;e++){let n=document.createElement("div");n.setAttribute("class","rows");for(let t=0;t<10;t++){let o=document.createElement("div");o.setAttribute("class","squares"),o.id="board2-"+e+t,o.addEventListener("click",(()=>{B&&M&&R(e,t)})),n.appendChild(o)}t.appendChild(n)}}(),function(){let e=f("Carrier",5),t=f("Battleship",4),n=f("Destroyer",3),o=f("Submarine",3),i=f("Patrol Boat",2);W(e),W(t),W(n),W(o),W(i)}(),k(),T=!0,M=!0)})),e.appendChild(t),e.appendChild(n),v.appendChild(e)}(),function(){const e=document.createElement("div");e.id="content";const t=document.createElement("div");t.id="setup-area",e.appendChild(t),v.appendChild(e)}(),function(){const e=document.getElementById("setup-area"),t=document.createElement("div");t.id="ships-div";const n=document.createElement("div");n.setAttribute("class","ship-div-elements");const o=document.createElement("div");o.setAttribute("class","ship-placements"),o.id="carrierDiv",o.draggable=!0,o.addEventListener("click",(()=>{L.deployed&&!T&&(g=L,b=o,q())})),o.addEventListener("dragstart",(()=>{T||(g=L,b=o,g.deployed&&x())}));const i=document.createElement("div");i.setAttribute("class","ship-parts"),i.id="carrier1";const r=document.createElement("div");r.setAttribute("class","ship-parts"),r.id="carrier2";const a=document.createElement("div");a.setAttribute("class","ship-parts"),a.id="carrier3";const s=document.createElement("div");s.setAttribute("class","ship-parts"),s.id="carrier4";const l=document.createElement("div");l.setAttribute("class","ship-parts"),l.id="carrier5",o.appendChild(i),o.appendChild(r),o.appendChild(a),o.appendChild(s),o.appendChild(l),n.appendChild(o);const d=document.createElement("div");d.setAttribute("class","ship-div-elements");const c=document.createElement("div");c.setAttribute("class","ship-placements"),c.id="battleshipDiv",c.draggable=!0,c.addEventListener("click",(()=>{D.deployed&&!T&&(g=D,b=c,q())})),c.addEventListener("dragstart",(()=>{T||(g=D,b=c,g.deployed&&x())}));const u=document.createElement("div");u.setAttribute("class","ship-parts"),u.id="battleship1";const p=document.createElement("div");p.setAttribute("class","ship-parts"),p.id="battleship2";const A=document.createElement("div");A.setAttribute("class","ship-parts"),A.id="battleship3";const h=document.createElement("div");h.setAttribute("class","ship-parts"),h.id="battleship4",c.appendChild(u),c.appendChild(p),c.appendChild(A),c.appendChild(h),d.appendChild(c),b=c;const m=document.createElement("div");m.setAttribute("class","ship-div-elements");const f=document.createElement("div");f.setAttribute("class","ship-placements"),f.id="destroyerDiv",f.draggable=!0,f.addEventListener("click",(()=>{H.deployed&&!T&&(g=H,b=f,q())})),f.addEventListener("dragstart",(()=>{T||(g=H,b=f)}));const C=document.createElement("div");C.setAttribute("class","ship-parts"),C.id="destroyer1";const v=document.createElement("div");v.setAttribute("class","ship-parts"),v.id="destroyer2";const B=document.createElement("div");B.setAttribute("class","ship-parts"),B.id="destroyer3",f.appendChild(C),f.appendChild(v),f.appendChild(B),m.appendChild(f);const y=document.createElement("div");y.setAttribute("class","ship-div-elements");const I=document.createElement("div");I.setAttribute("class","ship-placements"),I.id="submarineDiv",I.draggable=!0,I.addEventListener("click",(()=>{P.deployed&&!T&&(g=P,b=I,q())})),I.addEventListener("dragstart",(()=>{T||(g=P,b=I)}));const E=document.createElement("div");E.setAttribute("class","ship-parts"),E.id="submarine1";const w=document.createElement("div");w.setAttribute("class","ship-parts"),w.id="submarine2";const k=document.createElement("div");k.setAttribute("class","ship-parts"),k.id="submarine3",I.appendChild(E),I.appendChild(w),I.appendChild(k),y.appendChild(I);const R=document.createElement("div");R.setAttribute("class","ship-div-elements");const F=document.createElement("div");F.setAttribute("class","ship-placements"),F.id="patrolDiv",F.draggable=!0,F.addEventListener("click",(()=>{U.deployed&&!T&&(g=U,b=F,q())})),F.addEventListener("dragstart",(()=>{T||(g=U,b=F)}));const S=document.createElement("div");S.setAttribute("class","ship-parts"),S.id="patrol1";const z=document.createElement("div");z.setAttribute("class","ship-parts"),z.id="patrol2",F.appendChild(S),F.appendChild(z),R.appendChild(F),t.appendChild(n),t.appendChild(d),t.appendChild(m),t.appendChild(y),t.appendChild(R),e.appendChild(t)}(),function(){const e=document.querySelector("#content"),t=document.createElement("div");t.id="board1",t.setAttribute("class","big"),e.appendChild(t);for(let e=0;e<10;e++){let n=document.createElement("div");n.setAttribute("class","rows");for(let t=0;t<10;t++){let o=document.createElement("div");o.setAttribute("class","squares"),o.id="board1-"+e+t,o.addEventListener("dragover",(n=>{n.preventDefault(),T||y(e,t)})),o.addEventListener("dragleave",(n=>{n.preventDefault(),T||I(e,t)})),o.addEventListener("drop",(n=>{n.preventDefault(),T||(z.myBoard.canPlace(g,e,t,g.horizontal)?E(e,t):I(e,t))})),n.appendChild(o)}t.appendChild(n)}}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,